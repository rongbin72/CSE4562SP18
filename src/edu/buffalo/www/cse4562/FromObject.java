package edu.buffalo.www.cse4562;


import net.sf.jsqlparser.expression.PrimitiveValue;
import net.sf.jsqlparser.schema.Table;
import net.sf.jsqlparser.statement.select.*;

import java.util.List;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;

public class FromObject implements FromItemVisitor {
	private FromItem body;
	private String tablenames;
	private boolean ifsubselect;
	private SelectBody subbody;
	
	public FromObject(FromItem body) {
		this.body = body;
		this.body.accept(this);
	}
	
	public Read GetTable() throws IOException, SQLException {//iterators
		if(!this.ifsubselect) {
			//must read table from file
			String path = Schema.getPath(this.tablenames);
			Read reader = new Read(new File(path),this.tablenames);
			return reader;
		}
		else {
			//subselect must read table from a temp table generated by iterator
			Iterator iterator = new Iterator((PlainSelect)this.subbody);//result of plain select
			//new iterator have finished generating a new table here
			List<List<PrimitiveValue>> result = iterator.Result();
			Schema.addTable(this.tablenames, iterator.getNewColindex(), result);
			Read reader = new Read(this.tablenames);//when visiting subselect, this.tablenames have been fleshed
			return reader;
		}
	}
	
	public String getName() {
		return this.tablenames;
	}
	
	@Override
	public void visit(Table table) {
		this.tablenames = table.getName();
		String alias = table.getAlias();
		if(alias != null) {
			Schema.addTable(this.tablenames, alias);
			this.tablenames = alias;
		}
	}
	@Override
	public void visit(SubSelect subselect) {
		this.ifsubselect = true;
		this.tablenames = subselect.getAlias();
		this.subbody = subselect.getSelectBody();
		
	}
	@Override
	public void visit(SubJoin arg0) {
		// TODO Auto-generated method stub
		
	}
	



	
}
